//mixins

@mixin grid($cols, $mgn) {
	float: left;
	margin-right: $mgn;
	margin-bottom: $mgn;
	width: ((100% - (($cols - 1) * $mgn)) / $cols);
	&:nth-child(3n){
		margin-right: $mgn;
	}
	&:nth-child(4n){
		margin-right: $mgn;
	}
	&:nth-child(5n){
		margin-right: $mgn;
	}
	&:nth-child(6n){
		margin-right: $mgn;
	}
	&:nth-child(#{$cols}n){
		margin-right: 0;
	}
}

@mixin clearFix{
	&:after{
		content:"";
		clear:both;
		display:block;
	}
}

@mixin mQ($arg...) {
	@if length($arg) == 1 {
		@media screen and (min-width: nth($arg,1)){
			@content;
		}
	}
	@if length($arg) == 2 {
		@media screen and (max-width: nth($arg,1)) and (min-width: nth($arg,2)){
			@content;
		}
	}
}

//Styling for Landscape Orientation
@mixin mQ_lan{
	@media screen and (orientation:landscape){
		@content;
	}
}

//Media Query Mixin that checks orientation and takes one arg for min-width
@mixin mQ_land($arg){
	@media screen and (orientation:landscape) and (min-width: $arg){
		@content;
	}
}